AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Slack User Management

Parameters:
    stage:
        Type: String
        AllowedValues:
          - alpha
          - beta
          - prod
        Description: Enter alpha, beta or prod to designate the deployment stage/environment
    notificationsEmail:
        Type: String
        AllowedPattern: "^[\\x20-\\x45]?[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$"
        Description: Enter the email address of a person, group or system to be notified of alarms
    slackToken:
        Type: String
        Description: Slack Token
    slackSecret:
        Type: String
        Description: Slack Secret
    slackWebhook:
        Type: String
        Description: Slack webhook
    azureTenantId:
        Type: String
        Description: Azure Tenant Id
    azureClientId:
        Type: String
        Description: Azure Client Id
    azureClientSecret:
        Type: String
        Description: Azure Client Secret
    layerBucket:
        Type: String
        Description: S3 bucket name containing Lambda layers

Resources:
    nestedStackLambda:
        Type: AWS::Serverless::Application
        Properties:
            Location: sam/cfn/cfn-lambda-functions.yaml
            Parameters:
                stage: !Ref stage
                slackToken: !Ref slackToken
                slackSecret: !Ref slackSecret
                slackWebhook: !Ref slackWebhook
                azureTenantId: !Ref azureTenantId
                azureClientId: !Ref azureClientId
                azureClientSecret: !Ref azureClientSecret
                layerBucket: !Ref layerBucket
                s3Bucket: !Ref s3Bucket
                dynamodbTableUserProcessing: !GetAtt nestedStackDynamodb.Outputs.dynamodbTableUserProcessing

    nestedStackApigateway:
        Type: AWS::Serverless::Application
        Properties:
            Location: sam/cfn/cfn-api-gateways.yaml
            Parameters:
                stage: !Ref stage
                functionMessageController: !GetAtt nestedStackLambda.Outputs.functionMessageControllerName

    nestedStackDynamodb:
        Type: AWS::Serverless::Application
        Properties:
            Location: sam/cfn/cfn-dynamodb-tables.yaml

    nestedStackStepfunctions:
        Type: AWS::Serverless::Application
        Properties:
            Location: sam/cfn/cfn-stepfunctions-stepmachines.yaml
            Parameters:
                functionUserListArn: !GetAtt nestedStackLambda.Outputs.functionUserListArn
                functionAdLookupArn: !GetAtt nestedStackLambda.Outputs.functionAdLookupArn
                functionFinisherArn: !GetAtt nestedStackLambda.Outputs.functionFinisherArn

    s3Bucket:
        Type: AWS::S3::Bucket
