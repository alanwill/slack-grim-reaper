AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Lambda function resources

Parameters:
    stage:
        Type: String
    slackToken:
        Type: String
    slackSecret:
        Type: String
    slackChannel:
        Type: String
    azureTenantId:
        Type: String
    azureClientId:
        Type: String
    azureClientSecret:
        Type: String
    layerBucket:
        Type: String
    dynamodbTableUserProcessing:
        Type: String
    s3Bucket:
        Type: String

Globals:
    Function:
        Runtime: python3.6
        Handler: handler.handler
        MemorySize: 128
        Timeout: 30

Resources:
    layerMain:
        Type: AWS::Serverless::LayerVersion
        Properties:
            LayerName: Grim-Reaper-Main
            Description: Main Python libraries for the Grim Reaper app
            ContentUri:
                Bucket: !Ref layerBucket
                Key: grim-reaper_layer.zip
            CompatibleRuntimes:
                - python3.6
            RetentionPolicy: Retain

    functionUserList:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Join [ "-", [ "slack-user-reporter-userlist", !Ref stage ] ]
            Description: Generates a list of all slack users with non-disabled accounts
            CodeUri: ../../sam/functions/slack-user-reporter-userlist
            Timeout: 900
            MemorySize: 1024
            Tracing: Active
            Policies:
                - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
                - DynamoDBCrudPolicy:
                    TableName: !Ref dynamodbTableUserProcessing
            Layers:
                - !Ref layerMain
            Environment:
                Variables:
                    SLACK_TOKEN: !Ref slackToken
                    USER_PROCESSING_TABLE: !Ref dynamodbTableUserProcessing

    functionAdLookup:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Join [ "-", [ "slack-user-reporter-adlookup", !Ref stage ] ]
            Description: Looks up each Slack user against Azure AD
            CodeUri: ../../sam/functions/slack-user-reporter-adlookup
            Timeout: 900
            MemorySize: 1536
            Tracing: Active
            Policies:
                - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
                - DynamoDBCrudPolicy:
                    TableName: !Ref dynamodbTableUserProcessing
            Layers:
                - !Ref layerMain
            Environment:
                Variables:
                    AZURE_TENANT_ID: !Ref azureTenantId
                    AZURE_CLIENT_ID: !Ref azureClientId
                    AZURE_CLIENT_SECRET: !Ref azureClientSecret
                    USER_PROCESSING_TABLE: !Ref dynamodbTableUserProcessing

    functionFinisher:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Join [ "-", [ "slack-user-reporter-finisher", !Ref stage ] ]
            Description: Creates CSV and uploads to S3
            CodeUri: ../../sam/functions/slack-user-reporter-finisher
            Timeout: 120
            MemorySize: 128
            Tracing: Active
            Policies:
                - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
                - DynamoDBReadPolicy:
                    TableName: !Ref dynamodbTableUserProcessing
                - S3CrudPolicy:
                    BucketName: !Ref s3Bucket
            Layers:
                - !Ref layerMain
            Environment:
                Variables:
                    USER_PROCESSING_TABLE: !Ref dynamodbTableUserProcessing
                    S3_BUCKET_NAME: !Ref s3Bucket
                    SLACK_TOKEN: !Ref slackToken
                    SLACK_CHANNEL: !Ref slackChannel

    functionMessageController:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Join [ "-", [ "slack-message-controller", !Ref stage ] ]
            Description: Slack message controller
            CodeUri: ../../sam/functions/slack-message-controller
            Timeout: 120
            MemorySize: 128
            Tracing: Active
            Policies:
                - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
                - SNSPublishMessagePolicy:
                    TopicName: !GetAtt snsTopicDeprovisionusers.TopicName
            Layers:
                - !Ref layerMain
            Environment:
                Variables:
                    S3_BUCKET_NAME: !Ref s3Bucket
                    SLACK_SECRET: !Ref slackSecret
                    SLACK_TOKEN: !Ref slackToken
                    SNS_TOPIC_DEACTIVATE: !Ref snsTopicDeprovisionusers

    functionUserDeprovisioner:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Join [ "-", [ "slack-user-deprovisioner", !Ref stage ] ]
            Description: Slack user deprovisioner
            CodeUri: ../../sam/functions/slack-user-deprovisioner
            Timeout: 120
            MemorySize: 128
            Tracing: Active
            Events:
                snsDeprovisioner:
                    Type: SNS
                    Properties:
                        Topic: !Ref snsTopicDeprovisionusers
            Policies:
                - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
            Layers:
                - !Ref layerMain
            Environment:
                Variables:
                    SLACK_TOKEN: !Ref slackToken
                    SLACK_SECRET: !Ref slackSecret
                    USER_PROCESSING_TABLE: !Ref dynamodbTableUserProcessing

    snsTopicDeprovisionusers: 
        Type: AWS::SNS::Topic
        Properties: 
            Subscription:
                -
                    Endpoint: !GetAtt functionUserDeprovisioner.Arn
                    Protocol: "lambda"

Outputs:
    functionUserListArn: 
        Value: !GetAtt functionUserList.Arn
        Description: Lambda function functionUserList Arn
    functionAdLookupArn: 
        Value: !GetAtt functionAdLookup.Arn
        Description: Lambda function functionAdLookup Arn
    functionFinisherArn: 
        Value: !GetAtt functionFinisher.Arn
        Description: Lambda function functionFinisher Arn
    functionMessageControllerArn: 
        Value: !GetAtt functionMessageController.Arn
        Description: Lambda function functionMessageController Arn
    functionMessageControllerName: 
        Value: !Ref functionMessageController
        Description: Lambda function functionMessageController Name
    functionUserDeprovisionerArn: 
        Value: !GetAtt functionUserDeprovisioner.Arn
        Description: Lambda function functionUserDeprovisioner Arn
    functionUserDeprovisionerName: 
        Value: !Ref functionUserDeprovisioner
        Description: Lambda function functionUserDeprovisioner Name