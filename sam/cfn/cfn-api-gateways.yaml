AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: API Gateway resources

Parameters:
    stage:
        Type: String
    functionSlackMessengerArn:
        Type: String

Resources:
    iamRoleCloudwatchLogs:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                - 
                    Effect: Allow
                    Action: sts:AssumeRole
                    Principal:
                        Service: apigateway.amazonaws.com
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/service-role/AmazonApiGatewayPushToCloudWatchLogs

    apiAccount:
        Type: AWS::ApiGateway::Account
        Properties: 
            CloudWatchRoleArn: !GetAtt iamRoleCloudwatchLogs.Arn

    cwlSlackGrimReaper: 
        Type: AWS::Logs::LogGroup
        Properties: 
            RetentionInDays: 7

    apigatewaySlackGrimReaper:
        Type: AWS::ApiGateway::RestApi
        Properties:
            Name: !Join [ "-", [ "slack-grim-reaper", !Ref stage ] ]
            Description: "This API serves as the Request endpoint for Slack's interactive components"
            EndpointConfiguration:
                Types:
                - EDGE
        
    apigatewayProxyResource:
        Type: AWS::ApiGateway::Resource
        Properties:
            RestApiId: !Ref apigatewaySlackGrimReaper
            ParentId: !GetAtt [apigatewaySlackGrimReaper, RootResourceId]
            PathPart: '{proxy+}'
        
    apigatewayResourceANY:
        Type: AWS::ApiGateway::Method
        Properties:
            RestApiId: !Ref apigatewaySlackGrimReaper
            ResourceId: !Ref apigatewayProxyResource
            HttpMethod: POST      
            AuthorizationType: NONE
            Integration:
                Type: AWS_PROXY
                IntegrationHttpMethod: POST
                Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionSlackMessengerArn}/invocations

    apigatewaySlackGrimReaperStage:
        Type: AWS::ApiGateway::Stage
        Properties:
            StageName: !Ref stage
            RestApiId: !Ref apigatewaySlackGrimReaper
            DeploymentId: !Ref apigatewaySlackGrimReaperDeployment
            TracingEnabled: true
            AccessLogSetting: 
                DestinationArn: !GetAtt cwlSlackGrimReaper.Arn
            MethodSettings:
                - 
                    ResourcePath: /
                    HttpMethod: '*' 
                    MetricsEnabled: true
                    DataTraceEnabled: true
                    LoggingLevel: ERROR
    
    apigatewaySlackGrimReaperDeployment:
        Type: AWS::ApiGateway::Deployment
        DependsOn: apigatewayResourceANY
        Properties: 
            RestApiId: !Ref apigatewaySlackGrimReaper

    permissionSlackConnector:
        Type: AWS::Lambda::Permission
        Properties:
            FunctionName: !Select [6, !Split [ ":", !Ref functionSlackMessengerArn ]]
            Action: lambda:InvokeFunction
            Principal: apigateway.amazonaws.com
            SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apigatewaySlackGrimReaper}/*"

Outputs:
    slackGrimReaperRequestUrl:
        Value: !Sub "https://${apigatewaySlackGrimReaper}.execute-api.${AWS::Region}.amazonaws.com/${apigatewaySlackGrimReaperStage}/action"
        Description: Slack Request URL